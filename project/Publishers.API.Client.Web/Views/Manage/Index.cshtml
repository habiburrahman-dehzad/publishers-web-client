@model Publishers.API.Client.MembershipService.Models.IndexViewModel
@{
    ViewBag.Title = "Manage";
}

<header>
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="title-text">
                    <span class="title">Manage Your Account</span>
                    <hr class="star-light">
                    <span class="description">You can manage your account and update your information</span>
                </div>
            </div>
        </div>
    </div>
</header>

<section>
    <div class="container">
        <div class="col-lg-12">
            <p class="text-success">@ViewBag.StatusMessage</p>
            <div>
                <h4>Manage your account settings</h4>
                <hr />
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BrowserRemembered, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.BrowserRemembered, new { htmlAttributes = new { @readonly = "true", onclick = "return false" } })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-7">
                            @Html.ActionLink("Edit Personal Information", "EditPersonalInfo", null, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>

                <hr class="star-primary" />

                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-3">Password:</label>
                        <div class="col-md-offset-3 col-md-7">
                            @Html.ActionLink("Change your password", "ChangePassword", null, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>